<tool id="proteomics_search_tandem_1" name="X!Tandem MSMS Search" version="1.0.0">
	<requirements><requirement type="package">protk</requirement></requirements>
	<description>Run an OMSSA Search on a File</description>

	<command>
		#if $database.source_select=="built_in" #tandem_search.rb -d $database.dbkey $glyco $input_file -o $output -r
		#else #tandem_search.rb -d $database.fasta_file $glyco $input_file -o $output -r
		#end if
	</command>

	<inputs>	
		<conditional name="database">
			<param name="source_select" type="select" label="Database source">
				<option value="built_in">Built-In</option>
				<option value="input_ref">Your Upload File</option>
			</param>
			<when value="built_in">
				<param name="dbkey" type="select" format="text" >
					<label>Database</label>
					<options from_file="pepxml_databases.loc">
						<column name="name" index="0" />
						<column name="value" index="2" />
					</options>
				</param>
			</when>
			<when value="input_ref">
				<param name="fasta_file" type="data" format="fasta" label="Uploaded FASTA file" />
			</when>
		</conditional>
		
		<param name="input_file" type="data" format="mzml" multiple="false" label="MSMS File" help="An mzML file with MS/MS data"/>
		<param name="glyco" type="boolean" label="Require deamidated-N (glycocapture data)" truevalue="-g" falsevalue=""/>
	</inputs>


	<outputs>
		<data format="raw_pepxml" name="output" metadata_source="input_file" label="X!Tandem_vs_${database.dbkey if $database.has_key('dbkey') else $database.fasta_file.display_name}.${input_file.display_name}.${input_file.display_name}.pepXML"/>
	</outputs>


  <help>
	Run an X!Tandem Search
  </help>

</tool>
